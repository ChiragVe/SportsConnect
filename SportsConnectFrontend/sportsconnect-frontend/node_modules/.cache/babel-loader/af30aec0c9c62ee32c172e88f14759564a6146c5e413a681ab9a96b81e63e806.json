{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Anusha\\\\Desktop\\\\SportsConnect\\\\SportsConnectFrontend\\\\sportsconnect-frontend\\\\src\\\\components\\\\Main\\\\Main.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './Main.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Main = ({\n  selectedSport\n}) => {\n  _s();\n  const [matches, setMatches] = useState([]);\n  const [error, setError] = useState(null);\n  const fetchMatches = async sport => {\n    try {\n      const response = await axios.get(`http://localhost:8080/api/fixtures/${sport}`);\n      setMatches(response.data);\n      setError(null); // Clear any previous errors\n    } catch (err) {\n      setError('Failed to fetch data');\n      console.error(err);\n    }\n  };\n  useEffect(() => {\n    if (selectedSport) {\n      fetchMatches(selectedSport);\n    }\n  }, [selectedSport]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: [error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"matches-list\",\n      children: matches.map(match => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"match-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [match.team1, \" vs \", match.team2]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Date: \", match.matchDate]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this)]\n      }, match.matchId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(Main, \"OJPtkFAe9PbTQeeHqAZWJ9bsPX0=\");\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Main","selectedSport","_s","matches","setMatches","error","setError","fetchMatches","sport","response","get","data","err","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","match","team1","team2","matchDate","matchId","_c","$RefreshReg$"],"sources":["C:/Users/Anusha/Desktop/SportsConnect/SportsConnectFrontend/sportsconnect-frontend/src/components/Main/Main.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './Main.css';\r\n\r\nconst Main = ({ selectedSport }) => {\r\n  const [matches, setMatches] = useState([]);\r\n  const [error, setError] = useState(null);\r\n\r\n  const fetchMatches = async (sport) => {\r\n    try {\r\n      const response = await axios.get(`http://localhost:8080/api/fixtures/${sport}`);\r\n      setMatches(response.data);\r\n      setError(null); // Clear any previous errors\r\n    } catch (err) {\r\n      setError('Failed to fetch data');\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (selectedSport) {\r\n      fetchMatches(selectedSport);\r\n    }\r\n  }, [selectedSport]);\r\n\r\n  return (\r\n    <div className=\"main\">\r\n      {error && <p className=\"error\">{error}</p>}\r\n      <ul className=\"matches-list\">\r\n        {matches.map(match => (\r\n          <li className=\"match-card\" key={match.matchId}>\r\n            <h3>{match.team1} vs {match.team2}</h3>\r\n            <p>Date: {match.matchDate}</p>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpB,MAAMC,IAAI,GAAGA,CAAC;EAAEC;AAAc,CAAC,KAAK;EAAAC,EAAA;EAClC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMY,YAAY,GAAG,MAAOC,KAAK,IAAK;IACpC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAAC,sCAAsCF,KAAK,EAAE,CAAC;MAC/EJ,UAAU,CAACK,QAAQ,CAACE,IAAI,CAAC;MACzBL,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;IAClB,CAAC,CAAC,OAAOM,GAAG,EAAE;MACZN,QAAQ,CAAC,sBAAsB,CAAC;MAChCO,OAAO,CAACR,KAAK,CAACO,GAAG,CAAC;IACpB;EACF,CAAC;EAEDhB,SAAS,CAAC,MAAM;IACd,IAAIK,aAAa,EAAE;MACjBM,YAAY,CAACN,aAAa,CAAC;IAC7B;EACF,CAAC,EAAE,CAACA,aAAa,CAAC,CAAC;EAEnB,oBACEF,OAAA;IAAKe,SAAS,EAAC,MAAM;IAAAC,QAAA,GAClBV,KAAK,iBAAIN,OAAA;MAAGe,SAAS,EAAC,OAAO;MAAAC,QAAA,EAAEV;IAAK;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1CpB,OAAA;MAAIe,SAAS,EAAC,cAAc;MAAAC,QAAA,EACzBZ,OAAO,CAACiB,GAAG,CAACC,KAAK,iBAChBtB,OAAA;QAAIe,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACxBhB,OAAA;UAAAgB,QAAA,GAAKM,KAAK,CAACC,KAAK,EAAC,MAAI,EAACD,KAAK,CAACE,KAAK;QAAA;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACvCpB,OAAA;UAAAgB,QAAA,GAAG,QAAM,EAACM,KAAK,CAACG,SAAS;QAAA;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GAFAE,KAAK,CAACI,OAAO;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGzC,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACjB,EAAA,CAlCIF,IAAI;AAAA0B,EAAA,GAAJ1B,IAAI;AAoCV,eAAeA,IAAI;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}